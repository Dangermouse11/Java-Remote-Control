/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LogFileViewerForAdmin.java
 *
 * Created on Feb 5, 2011, 8:52:21 AM
 */

package MARC.myjavaproject.LogInfo.ForHost;

//import MARC.myjavaproject.LogInfo.ForAdministrator.*;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author Partho Biswas
 */
public class LogFileViewerForHost extends javax.swing.JFrame {

    /** Creates new form LogFileViewerForAdmin */
    public LogFileViewerForHost() {

        setIconImage(Toolkit.getDefaultToolkit().getImage("resourse/krfb-icon.png"));

        initComponents();
        setTitle("MARS-Host-LogFile-"+ HostLogListViewer.index +".log");
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jTextArea1.setBackground(new java.awt.Color(102, 102, 102));
        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(204, 204, 204));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                LogFileViewerForHost LFV = new LogFileViewerForHost();
                LFV.setVisible(true);
                LFV.setLocationRelativeTo( null );

                openFile(HostLogListViewer.index);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables


    public static int indexHe;
    public static void openFile(int index)
    {
        indexHe = index;
        try
        {
            // Open a file of the given name.
            File file = new File("MARS-Host-LogFile-"+ indexHe +".log");
            System.out.println(index);
            System.out.println(indexHe);

            // Get the size of the opened file.
            int size = (int)file.length();

            // Set to zero a counter for counting the number of
            // characters that have been read from the file.
            int chars_read = 0;

            // Create an input reader based on the file, so we can read its data.
            // FileReader handles international character encoding conversions.
            FileReader in = new FileReader(file);

            // Create a character array of the size of the file,
            // to use as a data buffer, into which we will read
            // the text data.
            char[] data = new char[size];

            // Read all available characters into the buffer.
            while(in.ready())
            {
                // Increment the count for each character read,
                // and accumulate them in the data buffer.
                chars_read += in.read(data, chars_read, size - chars_read);
            }
            in.close();

            // Create a temporary string containing the data,
            // and set the string into the JTextArea.
            jTextArea1.setText(new String(data, 0, chars_read));

            // Cache the currently opened filename for use at save time...
//            this.currFileName = fileName;
            // ...and mark the edit session as being clean
//            this.dirty = false;

            // Display the name of the opened directory+file in the statusBar.
//            statusBar.setText("Opened " + fileName);
//            updateCaption();
        }
        catch (IOException e)
        {
//        statusBar.setText("Error opening " + fileName);
            e.printStackTrace();
        }
    }


}
