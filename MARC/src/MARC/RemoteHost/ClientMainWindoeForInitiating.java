
package MARC.RemoteHost;

//import RemoteHost.ImageServer.HostServerConfigGUI;
import MARC.Administrator.ServerMainWindoeForInitiating;
import MARC.myjavaproject.LogInfo.ForHost.AppLogInfoForHost;
import MARC.myjavaproject.LogInfo.ForHost.HostLogListViewer;
import MARC.myjavaproject.MARS_AboutBoxGUI;
import MARC.myjavaproject.Server.RMI.ServerAdmin;
import java.awt.Color;
import java.awt.Toolkit;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import MARC.myjavaproject.main;
import MARC.myjavaproject.utilities.InetAdrUtility;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author PARTHO BISWAS
 */
public class ClientMainWindoeForInitiating extends javax.swing.JFrame {

    private static  int ySize;
    private static  int xSize;
    public  static ClientMainWindoeForInitiating CMWFI02 = new ClientMainWindoeForInitiating();


//    public static String SERVER_CONFIG_FILE;

//    private TimeAndDate TaD = new TimeAndDate();


//    private static MyGlassPane myGlassPane;
    private static JPanel glass02 ;
    public  int SWC = 1;



    /** Creates new form ClientMainWindoeForInitiating */
    public ClientMainWindoeForInitiating() {

        setIconImage(Toolkit.getDefaultToolkit().getImage("resourse/krfb-icon.png"));

//        Toolkit tk = Toolkit.getDefaultToolkit();
//        ySize = ( (int)  tk.getScreenSize().getHeight());
//        xSize = ( (int)  tk.getScreenSize().getWidth());
//        setBounds((xSize/2) - 300, (ySize/2) - 200, 600, 400);

        initComponents();
        setLocationRelativeTo( null );

        
        
        // shows the time (this clows down the application)
//        hostClockPanel.add(Show_Time_date());




    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hostMomPanel = new javax.swing.JPanel();
        hostConnectionTabbedPane = new javax.swing.JTabbedPane();
        hostConnectionPanel = new javax.swing.JPanel();
        workingGlasPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jCheckBoxManualAdr = new javax.swing.JCheckBox();
        jCheckBoxDefaultAdr = new javax.swing.JCheckBox();
        jCheckBoxMultihomedEnabled = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jCheckBoxSSLEnabled = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxLocalAdrs = new javax.swing.JComboBox(InetAdrUtility.getLocalIPAdresses());
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        editButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();
        hostStatusPanel = new javax.swing.JPanel();
        hostStatusScrollPane = new javax.swing.JScrollPane();
        jTextAreaHostStatus = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        runHostServerToggleButton = new javax.swing.JToggleButton();
        strAdmButton = new javax.swing.JButton();
        admExitButton = new javax.swing.JButton();
        hostClockPanel = new javax.swing.JPanel();
        hostHistTabbedPane = new javax.swing.JTabbedPane();
        HostLogInfoPanel = new javax.swing.JPanel();
        HostLogInfoScrollPane = new javax.swing.JScrollPane();
        hostLogInfoTextArea = new javax.swing.JTextArea();
        HostContactPanel = new javax.swing.JPanel();
        ClearCurrentLogButton = new javax.swing.JButton();
        ViewAllLogButton = new javax.swing.JButton();
        ClearAllLogButton = new javax.swing.JButton();
        DisableOrEnableLogButton = new javax.swing.JButton();
        hostMenuBar = new javax.swing.JMenuBar();
        windowMenu = new javax.swing.JMenu();
        minTryMenuItem = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JSeparator();
        closeAllMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        manualMenuItem = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JSeparator();
        bugMenuItem = new javax.swing.JMenuItem();
        Qu1MenuItem = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JSeparator();
        aboutMenuItem = new javax.swing.JMenuItem();

        setTitle("MARS-Host Module");
        setBounds(new java.awt.Rectangle(320, 150, 600, 400));
        setResizable(false);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                formComponentRemoved(evt);
            }
        });

        hostMomPanel.setBackground(new java.awt.Color(50, 95, 109));

        hostConnectionTabbedPane.setBackground(new java.awt.Color(0, 0, 0));
        hostConnectionTabbedPane.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 3, true), "Connectivity & Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 51))); // NOI18N
        hostConnectionTabbedPane.setForeground(new java.awt.Color(204, 0, 51));

        hostConnectionPanel.setBackground(new java.awt.Color(51, 51, 51));
        hostConnectionPanel.setForeground(new java.awt.Color(204, 0, 0));

        workingGlasPanel.setBackground(new java.awt.Color(0, 0, 0));
        workingGlasPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.darkGray));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 2, true), "connection Mood", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(204, 0, 0));

        jCheckBoxManualAdr.setSelected(true);
        jCheckBoxManualAdr.setText("Manual");
        jCheckBoxManualAdr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxManualAdrActionPerformed(evt);
            }
        });

        jCheckBoxDefaultAdr.setText("Default");

        jCheckBoxMultihomedEnabled.setText("Auto detect (Multihomed server)");
        jCheckBoxMultihomedEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMultihomedEnabledActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxMultihomedEnabled, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBoxManualAdr, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jCheckBoxDefaultAdr, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxManualAdr)
                    .addComponent(jCheckBoxDefaultAdr))
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxMultihomedEnabled)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 2, true), "Connection Security", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(204, 0, 0));

        jCheckBoxSSLEnabled.setText("SSL(Secured shocket layers)");

        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Levenim MT", 2, 11));
        jTextPane1.setForeground(new java.awt.Color(204, 204, 204));
        jTextPane1.setText("Enable this option onty for Internet connections but not for LAN connections");
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(jCheckBoxSSLEnabled, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(jCheckBoxSSLEnabled)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 2, true), "Host Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(204, 0, 0));

        jLabel1.setText("Address:");

        jComboBoxLocalAdrs.setMaximumSize(new java.awt.Dimension(28, 20));
        jComboBoxLocalAdrs.setMinimumSize(new java.awt.Dimension(28, 20));
        jComboBoxLocalAdrs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLocalAdrsActionPerformed(evt);
            }
        });

        jLabel2.setText("Port:");

        jTextFieldPort.setText("6666");
        jTextFieldPort.setMaximumSize(new java.awt.Dimension(28, 20));
        jTextFieldPort.setMinimumSize(new java.awt.Dimension(28, 20));
        jTextFieldPort.setPreferredSize(new java.awt.Dimension(28, 20));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxLocalAdrs, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxLocalAdrs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 2, true), "Authorisation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(204, 0, 0));

        jLabel3.setText("Username:");

        jTextFieldUsername.setText("admin");
        jTextFieldUsername.setMaximumSize(new java.awt.Dimension(28, 2147483647));

        jLabel4.setText("Password:");

        jPasswordField.setText("admin");
        jPasswordField.setMaximumSize(new java.awt.Dimension(28, 2147483647));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout workingGlasPanelLayout = new javax.swing.GroupLayout(workingGlasPanel);
        workingGlasPanel.setLayout(workingGlasPanelLayout);
        workingGlasPanelLayout.setHorizontalGroup(
            workingGlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workingGlasPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workingGlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(workingGlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        workingGlasPanelLayout.setVerticalGroup(
            workingGlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workingGlasPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workingGlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(workingGlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        editButton.setBackground(new java.awt.Color(51, 51, 51));
        editButton.setForeground(new java.awt.Color(204, 204, 204));
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        applyButton.setBackground(new java.awt.Color(51, 51, 51));
        applyButton.setForeground(new java.awt.Color(204, 204, 204));
        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hostConnectionPanelLayout = new javax.swing.GroupLayout(hostConnectionPanel);
        hostConnectionPanel.setLayout(hostConnectionPanelLayout);
        hostConnectionPanelLayout.setHorizontalGroup(
            hostConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hostConnectionPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(393, Short.MAX_VALUE))
            .addComponent(workingGlasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        hostConnectionPanelLayout.setVerticalGroup(
            hostConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hostConnectionPanelLayout.createSequentialGroup()
                .addGroup(hostConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workingGlasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hostConnectionTabbedPane.addTab("Host Configuration", hostConnectionPanel);

        hostStatusPanel.setBackground(new java.awt.Color(51, 51, 51));
        hostStatusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 3, true), "Status", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N
        hostStatusPanel.setForeground(new java.awt.Color(204, 0, 51));

        jTextAreaHostStatus.setColumns(20);
        jTextAreaHostStatus.setEditable(false);
        jTextAreaHostStatus.setFont(new java.awt.Font("Comic Sans MS", 3, 12));
        jTextAreaHostStatus.setForeground(new java.awt.Color(204, 0, 102));
        jTextAreaHostStatus.setRows(5);
        jTextAreaHostStatus.setText("Idle");
        hostStatusScrollPane.setViewportView(jTextAreaHostStatus);

        javax.swing.GroupLayout hostStatusPanelLayout = new javax.swing.GroupLayout(hostStatusPanel);
        hostStatusPanel.setLayout(hostStatusPanelLayout);
        hostStatusPanelLayout.setHorizontalGroup(
            hostStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hostStatusScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
        );
        hostStatusPanelLayout.setVerticalGroup(
            hostStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hostStatusScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 0), 3, true));

        runHostServerToggleButton.setBackground(new java.awt.Color(0, 0, 0));
        runHostServerToggleButton.setForeground(new java.awt.Color(204, 0, 0));
        runHostServerToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MARC/myjavaproject/resources/idleIcon48.png"))); // NOI18N
        runHostServerToggleButton.setToolTipText("Run Server");
        runHostServerToggleButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        runHostServerToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runHostServerToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runHostServerToggleButtonActionPerformed(evt);
            }
        });

        strAdmButton.setBackground(new java.awt.Color(51, 51, 51));
        strAdmButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        strAdmButton.setForeground(new java.awt.Color(255, 0, 0));
        strAdmButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MARC/myjavaproject/resources/kdm-config-icon.png"))); // NOI18N
        strAdmButton.setText("Start Adm");
        strAdmButton.setToolTipText("Start Admin");
        strAdmButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        strAdmButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        strAdmButton.setIconTextGap(1);
        strAdmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strAdmButtonActionPerformed(evt);
            }
        });

        admExitButton.setBackground(new java.awt.Color(51, 51, 51));
        admExitButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        admExitButton.setForeground(new java.awt.Color(204, 0, 0));
        admExitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MARC/myjavaproject/resources/index48.png"))); // NOI18N
        admExitButton.setText("Exit");
        admExitButton.setToolTipText("Exit");
        admExitButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        admExitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        admExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(admExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
            .addComponent(strAdmButton, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
            .addComponent(runHostServerToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(runHostServerToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strAdmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(admExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        hostClockPanel.setBackground(new java.awt.Color(95, 132, 146));
        hostClockPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 3, true));
        hostClockPanel.setForeground(new java.awt.Color(204, 0, 0));
        hostClockPanel.setPreferredSize(new java.awt.Dimension(103, 82));

        javax.swing.GroupLayout hostClockPanelLayout = new javax.swing.GroupLayout(hostClockPanel);
        hostClockPanel.setLayout(hostClockPanelLayout);
        hostClockPanelLayout.setHorizontalGroup(
            hostClockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );
        hostClockPanelLayout.setVerticalGroup(
            hostClockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        hostHistTabbedPane.setBackground(new java.awt.Color(51, 51, 51));
        hostHistTabbedPane.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 3, true), "History & Help", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 51))); // NOI18N
        hostHistTabbedPane.setForeground(new java.awt.Color(204, 0, 0));

        HostLogInfoPanel.setBackground(new java.awt.Color(51, 51, 51));

        hostLogInfoTextArea.setColumns(20);
        hostLogInfoTextArea.setEditable(false);
        hostLogInfoTextArea.setFont(new java.awt.Font("Comic Sans MS", 0, 10));
        hostLogInfoTextArea.setForeground(new java.awt.Color(205, 0, 105));
        hostLogInfoTextArea.setRows(5);
        hostLogInfoTextArea.setBorder(null);
        HostLogInfoScrollPane.setViewportView(hostLogInfoTextArea);

        javax.swing.GroupLayout HostLogInfoPanelLayout = new javax.swing.GroupLayout(HostLogInfoPanel);
        HostLogInfoPanel.setLayout(HostLogInfoPanelLayout);
        HostLogInfoPanelLayout.setHorizontalGroup(
            HostLogInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HostLogInfoScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
        );
        HostLogInfoPanelLayout.setVerticalGroup(
            HostLogInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HostLogInfoScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
        );

        hostHistTabbedPane.addTab("   Log File   ", HostLogInfoPanel);

        HostContactPanel.setBackground(new java.awt.Color(51, 51, 51));
        HostContactPanel.setForeground(new java.awt.Color(204, 0, 51));

        ClearCurrentLogButton.setBackground(new java.awt.Color(51, 51, 51));
        ClearCurrentLogButton.setText("Clear Current Log ");
        ClearCurrentLogButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.darkGray));
        ClearCurrentLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearCurrentLogButtonActionPerformed(evt);
            }
        });

        ViewAllLogButton.setBackground(new java.awt.Color(51, 51, 51));
        ViewAllLogButton.setText("View Log History");
        ViewAllLogButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.darkGray));
        ViewAllLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAllLogButtonActionPerformed(evt);
            }
        });

        ClearAllLogButton.setBackground(new java.awt.Color(51, 51, 51));
        ClearAllLogButton.setText("  Clear All Log  ");
        ClearAllLogButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.darkGray));
        ClearAllLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearAllLogButtonActionPerformed(evt);
            }
        });

        DisableOrEnableLogButton.setBackground(new java.awt.Color(51, 51, 51));
        DisableOrEnableLogButton.setText("Disable Log Record");
        DisableOrEnableLogButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.darkGray));
        DisableOrEnableLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisableOrEnableLogButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HostContactPanelLayout = new javax.swing.GroupLayout(HostContactPanel);
        HostContactPanel.setLayout(HostContactPanelLayout);
        HostContactPanelLayout.setHorizontalGroup(
            HostContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HostContactPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HostContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClearCurrentLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(ClearAllLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HostContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DisableOrEnableLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(ViewAllLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addContainerGap())
        );
        HostContactPanelLayout.setVerticalGroup(
            HostContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HostContactPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HostContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ViewAllLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClearCurrentLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HostContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DisableOrEnableLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(ClearAllLogButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hostHistTabbedPane.addTab("Log Options", HostContactPanel);

        javax.swing.GroupLayout hostMomPanelLayout = new javax.swing.GroupLayout(hostMomPanel);
        hostMomPanel.setLayout(hostMomPanelLayout);
        hostMomPanelLayout.setHorizontalGroup(
            hostMomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hostMomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hostMomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(hostMomPanelLayout.createSequentialGroup()
                        .addComponent(hostConnectionTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(hostMomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hostClockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)))
                    .addGroup(hostMomPanelLayout.createSequentialGroup()
                        .addComponent(hostStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hostHistTabbedPane)))
                .addContainerGap())
        );
        hostMomPanelLayout.setVerticalGroup(
            hostMomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hostMomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hostMomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hostMomPanelLayout.createSequentialGroup()
                        .addComponent(hostClockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(hostConnectionTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hostMomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hostHistTabbedPane, 0, 0, Short.MAX_VALUE)
                    .addComponent(hostStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        hostMenuBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        windowMenu.setText("Widows");

        minTryMenuItem.setText("Minimise to Tray");
        minTryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minTryMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(minTryMenuItem);
        windowMenu.add(jSeparator9);

        closeAllMenuItem.setText("Close All");
        closeAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeAllMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(closeAllMenuItem);

        hostMenuBar.add(windowMenu);

        helpMenu.setText("Help");

        manualMenuItem.setText("User Manual");
        manualMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(manualMenuItem);
        helpMenu.add(jSeparator14);

        bugMenuItem.setText("Project Profile");
        bugMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bugMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(bugMenuItem);

        Qu1MenuItem.setText("Contact With Us");
        Qu1MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Qu1MenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(Qu1MenuItem);
        helpMenu.add(jSeparator10);

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        hostMenuBar.add(helpMenu);

        setJMenuBar(hostMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hostMomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hostMomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentRemoved

    private void runHostServerToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runHostServerToggleButtonActionPerformed

//        RunHost();
//        updateStatusOfHst();

        if (ServerAdmin.isRunning()) {
            ServerAdmin.Stop();
            runHostServerToggleButton.setToolTipText("Server Stopped ! !!"+"\nRun Again");
            runHostServerToggleButton.setIcon(new ImageIcon("resourse/ServerStop48.png"));


//          this line shows log info on consone and adminLogInfoTextArea
            if(isLogEnableHost == Boolean.TRUE)
            {
                AppLogInfoForHost.logger.info("Server Stopped");
            }




        } else {
            ServerAdmin.Start();
            runHostServerToggleButton.setToolTipText("Server Running ! !!\nWant to Stop ?");
            runHostServerToggleButton.setIcon(new ImageIcon("resourse/ServerRunning 48.png"));


//          this line shows log info on consone and adminLogInfoTextArea
            if(isLogEnableHost == Boolean.TRUE)
            {
                AppLogInfoForHost.logger.info("Server Started");
            }



        }
        updateStatusOfHst();
//        ServerMainWindoeForInitiating.updateStatusOfAdm();
        ServerMainWindoeForInitiating.runAdminWithHost();
    }//GEN-LAST:event_runHostServerToggleButtonActionPerformed

    public static void runHostWithAdmin()
    {
        if (!ServerAdmin.isRunning()) {
//            ServerAdmin.Stop();
            runHostServerToggleButton.setToolTipText("Server Stopped ! !!"+"\nRun Again");
            runHostServerToggleButton.setIcon(new ImageIcon("resourse/ServerStop48.png"));
        } else {
//            ServerAdmin.Start();
            runHostServerToggleButton.setToolTipText("Server Running ! !!\nWant to Stop ?");
            runHostServerToggleButton.setIcon(new ImageIcon("resourse/ServerRunning 48.png"));
        }
        updateStatusOfHst();

    }


    @SuppressWarnings("static-access")
    private void strAdmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strAdmButtonActionPerformed

        /* show the admin GUI if it is hidden, and it bring the GUI on focus if it is minimised.
                  *  here main(null) means 'ServerMainWindoeForInitiating' invockes main(null) and it is null
                   * because main is static
                  */

        if(main.iti == 1)
        {
           ServerMainWindoeForInitiating.main(null);
           main.iti ++;
//           ServerMainWindoeForInitiating.runAdminWithHost();
        }
        else
        {
           ServerMainWindoeForInitiating.showServerMainWindoeForInitiating();
//           ServerMainWindoeForInitiating.runAdminWithHost();
        }

//        if(ServerAdmin.isRunning())
//        {
//          ServerMainWindoeForInitiating.SMWFI02.updateStatusOfAdm();
//        }

        ServerMainWindoeForInitiating.runAdminWithHost();


//          this line shows log info on consone and adminLogInfoTextArea
            if(isLogEnableHost == Boolean.TRUE)
            {
                AppLogInfoForHost.logger.info("Administrator has been started from host");
            }



    }//GEN-LAST:event_strAdmButtonActionPerformed

    private void admExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admExitButtonActionPerformed

        if (JOptionPane.showConfirmDialog(null,
                "Exit application ?", "Confirm Dialog",
                JOptionPane.OK_CANCEL_OPTION) ==
                JOptionPane.OK_OPTION) {

//          this line shows log info on consone and adminLogInfoTextArea
            if(isLogEnableHost == Boolean.TRUE)
            {
                AppLogInfoForHost.logger.info("Application exits");
            }




            System.exit(0);
        }
    }//GEN-LAST:event_admExitButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed


        HostServerConfig.server_address = jComboBoxLocalAdrs.getSelectedItem().toString();
        HostServerConfig.server_port = Integer.valueOf(jTextFieldPort.getText());

        HostServerConfig.username = jTextFieldUsername.getText();
        HostServerConfig.password = String.copyValueOf(jPasswordField.getPassword());

        HostServerConfig.multihomed_enabled = jCheckBoxMultihomedEnabled.isSelected();
        HostServerConfig.ssl_enabled = jCheckBoxSSLEnabled.isSelected();

        HostServerConfig.default_address = jCheckBoxDefaultAdr.isSelected();

        HostServerConfig.storeConfiguration();


        CMWFI02.setDisabled();


//          this line shows log info on consone and adminLogInfoTextArea
            if(isLogEnableHost == Boolean.TRUE)
            {
                AppLogInfoForHost.logger.info("Host Information has been edited");
            }



    }//GEN-LAST:event_applyButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        jCheckBoxManualAdr.setEnabled(true);
        jCheckBoxDefaultAdr.setEnabled(true);
        jComboBoxLocalAdrs.setEnabled(true);
        jCheckBoxMultihomedEnabled.setEnabled(true);
        jCheckBoxSSLEnabled.setEnabled(true);
        jTextFieldPort.setEnabled(true);
        jTextFieldUsername.setEnabled(true);
        jPasswordField.setEnabled(true);
}//GEN-LAST:event_editButtonActionPerformed

    private void jComboBoxLocalAdrsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLocalAdrsActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jComboBoxLocalAdrsActionPerformed

    private void jCheckBoxMultihomedEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMultihomedEnabledActionPerformed
        jCheckBoxManualAdr.setSelected(!jCheckBoxMultihomedEnabled.isSelected());
        jCheckBoxDefaultAdr.setSelected(false);
        jCheckBoxDefaultAdr.setEnabled(!jCheckBoxMultihomedEnabled.isSelected());
        jComboBoxLocalAdrs.setEnabled(!jCheckBoxMultihomedEnabled.isSelected());
}//GEN-LAST:event_jCheckBoxMultihomedEnabledActionPerformed

    private void jCheckBoxManualAdrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxManualAdrActionPerformed
        jCheckBoxDefaultAdr.setEnabled(jCheckBoxManualAdr.isSelected());
        jComboBoxLocalAdrs.setEnabled(jCheckBoxManualAdr.isSelected());
        jCheckBoxMultihomedEnabled.setSelected(!jCheckBoxManualAdr.isSelected());
}//GEN-LAST:event_jCheckBoxManualAdrActionPerformed

    private void ClearCurrentLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearCurrentLogButtonActionPerformed


        if (JOptionPane.showConfirmDialog(this, "Clear Current Log File ? ",
                "Confirm Dialog", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) return;


        //        AppLogInfoForAdministrator.clearFile("E:/JAVA PROGRAMS/NetBeansProjectes/MyJavaProject-02/MARS-Administrator-LogFile-0.log");
        AppLogInfoForHost.clearFile("MARS-Host-LogFile-0.log");
        hostLogInfoTextArea.setText(null);


    }//GEN-LAST:event_ClearCurrentLogButtonActionPerformed

    private void ViewAllLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAllLogButtonActionPerformed


        HostLogListViewer.main(null);

    }//GEN-LAST:event_ViewAllLogButtonActionPerformed

    private void ClearAllLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearAllLogButtonActionPerformed


        if (JOptionPane.showConfirmDialog(this, "Clear All Log File ? ",
                "Confirm Dialog", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) return;


        AppLogInfoForHost.clearAllFile();
        AppLogInfoForHost.clearFile("MARS-Host-LogFile-0.log");
        hostLogInfoTextArea.setText(null);


    }//GEN-LAST:event_ClearAllLogButtonActionPerformed


    public static Boolean isLogEnableHost = Boolean.TRUE;

    private void DisableOrEnableLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisableOrEnableLogButtonActionPerformed


        if(isLogEnableHost == Boolean.TRUE) {
            isLogEnableHost = Boolean.FALSE;
            DisableOrEnableLogButton.setText("Enable Log Record");
            hostLogInfoTextArea.setText("Log Record has been Disabled");
            ClearCurrentLogButton.setEnabled(Boolean.FALSE);
            ClearAllLogButton.setEnabled(Boolean.FALSE);
            ViewAllLogButton.setEnabled(Boolean.FALSE);
        } else {
            isLogEnableHost = Boolean.TRUE;
            DisableOrEnableLogButton.setText("Disable Log Record");
            hostLogInfoTextArea.setText("");
            ClearCurrentLogButton.setEnabled(Boolean.TRUE);
            ClearAllLogButton.setEnabled(Boolean.TRUE);
            ViewAllLogButton.setEnabled(Boolean.TRUE);

        }
    }//GEN-LAST:event_DisableOrEnableLogButtonActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed


        MARS_AboutBoxGUI.main(null);


    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void minTryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minTryMenuItemActionPerformed

        this.dispose();

    }//GEN-LAST:event_minTryMenuItemActionPerformed

    private void closeAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeAllMenuItemActionPerformed

        System.exit(0);

    }//GEN-LAST:event_closeAllMenuItemActionPerformed

    private void manualMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualMenuItemActionPerformed

        JOptionPane.showMessageDialog(this, "This feature not yet been implemented. .. ...", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;


    }//GEN-LAST:event_manualMenuItemActionPerformed

    private void Qu1MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Qu1MenuItemActionPerformed

        JOptionPane.showMessageDialog(this, "This feature not yet been implemented. .. ...", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;


    }//GEN-LAST:event_Qu1MenuItemActionPerformed

    private void bugMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bugMenuItemActionPerformed
        try {
            System.out.println("Open chm file");
//            java.lang.Runtime.getRuntime().exec("rundll32" + " " + "url.dll,FileProtocolHandler" + " " + "MARC/myjavaproject/resources/MARC-Project Profile.chm");
//                /myjavaproject/resources/RemoteDesktop48.png          MARC-Project-Profile.chm
//                  /myjavaproject/resources/MARC-Project-Profile.chm
//            Desktop.getDesktop().open( new File("/myjavaproject/resources/MARC-Project-Profile.chm"));
            Runtime.getRuntime().exec("hh.exe MARC-Project-Profile.chm");

            System.out.println("Open chm file   02");
        } catch (IOException ex) {
            Logger.getLogger(ServerMainWindoeForInitiating.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Open chm file   03");
        }


    }//GEN-LAST:event_bugMenuItemActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                ClientMainWindoeForInitiating CMWFI;
                CMWFI = new ClientMainWindoeForInitiating();

                final JPanel glass  = (JPanel) CMWFI.getGlassPane();


                Toolkit tk = Toolkit.getDefaultToolkit();
                ySize = ( (int)  tk.getScreenSize().getHeight());
                xSize = ( (int)  tk.getScreenSize().getWidth());

                //        CONFIG_FILE = FileUtility.getCurrentDirectory() + "config";
//                SERVER_CONFIG_FILE = FileUtility.getCurrentDirectory() + "server.config";


//                CMWFI.setBounds((xSize/2) - 450, (ySize/2) - 250, 890, 600);
//                CMWFI.setSize(772, 582);
                


                // creates the Host Configuration tab
                CMWFI.inilitiseHost();
                
                
                // sets the glass pane on theworkingGlasPane
//                glass02 = glass;
//                glass.setVisible(true);
//                CMWFI.createAndDrawGlassPane();


                // disables everything on the workingGlasPane
                  CMWFI.setDisabled();



                CMWFI.setVisible(true);

                //  this copyes the SMWFI to SMWFI02
                CMWFI02 = CMWFI;

                // this statement changes the host  server state with admin for the first time
                if(main.iti == 2)
                {
                  runHostWithAdmin();
                }


            }
        });
    }



public static void showClientMainWindoeForInitiating()
    {
       CMWFI02.setVisible(true);
       CMWFI02.setLocationRelativeTo( null );
    }
public static void closeClientMainWindoeForInitiating()
    {
//       SMWFI02.setVisible(Boolean.FALSE);
       CMWFI02.setVisible(false);
    }




public void inilitiseHost()
{

        //  from here upto the end of this constructor , lies the code for Host Configuration tab
                HostServerConfig.loadConfiguration();
//        HostServerConfig.storeConfiguration();

        jComboBoxLocalAdrs.setSelectedItem(HostServerConfig.server_address);
        jTextFieldPort.setText(String.valueOf(HostServerConfig.server_port));

        jTextFieldUsername.setText(HostServerConfig.username);
        jPasswordField.setText(HostServerConfig.password);

        jCheckBoxSSLEnabled.setSelected(HostServerConfig.ssl_enabled);
        jCheckBoxMultihomedEnabled.setSelected(HostServerConfig.multihomed_enabled);
        jCheckBoxDefaultAdr.setSelected(HostServerConfig.default_address);

        if (jCheckBoxMultihomedEnabled.isSelected())
            jCheckBoxMultihomedEnabledActionPerformed(null);
        else
            jCheckBoxManualAdrActionPerformed(null);

}

/*
public void createAndDrawGlassPane()
{
                // sets the glass pane on theworkingGlasPane
//                myGlassPane = new MyGlassPane(editButton,workingGlasPanel);

//                editButton.addActionListener(this.ed);
//                workingGlasPanel.add(myGlassPane);

//                this.setGlassPane(myGlassPane);

//                editButtonActionPerformed(java.awt.event.ActionEvent evt)

//    glass.setVisible(true);
//    workingGlasPanel.add(glass);
    jPanel2.add(glass02);
    glass02.setVisible(true);
    jPanel2.repaint();

    glass02.setVisible(true);
    glass02.setLayout(new GridBagLayout());
//    JButton glassButton = new JButton("Hide");
//    glass.add(glassButton);
//    setEnabled(false);
}


*/


public  void setDisabled()
{
        jCheckBoxManualAdr.setEnabled(false);
        jCheckBoxDefaultAdr.setEnabled(false);
        jComboBoxLocalAdrs.setEnabled(false);
        jCheckBoxMultihomedEnabled.setEnabled(false);
        jCheckBoxSSLEnabled.setEnabled(false);
        jTextFieldPort.setEnabled(false);
        jTextFieldUsername.setEnabled(false);
        jPasswordField.setEnabled(false);
}


        public static   void updateStatusOfHst() {
        if (ServerAdmin.isRunning()) {
            jTextAreaHostStatus.setText(ServerAdmin.getStatus());
//            runServerToggleButton.setText("Stop");
//            runServerToggleButton.setIcon(new ImageIcon("images/ServerRunning 48.png"));
        }
        else {
            if (ServerAdmin.isIdle())
            {
                jTextAreaHostStatus.setText("Idle.");
                runHostServerToggleButton.setIcon(new ImageIcon("resourse/idleIcon48.png"));
            }
            else
            {
                jTextAreaHostStatus.setText("Stopped.");
                runHostServerToggleButton.setIcon(new ImageIcon("resourse/ServerStop48.png"));
            }

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearAllLogButton;
    private javax.swing.JButton ClearCurrentLogButton;
    private javax.swing.JButton DisableOrEnableLogButton;
    private javax.swing.JPanel HostContactPanel;
    private javax.swing.JPanel HostLogInfoPanel;
    private javax.swing.JScrollPane HostLogInfoScrollPane;
    private javax.swing.JMenuItem Qu1MenuItem;
    private javax.swing.JButton ViewAllLogButton;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton admExitButton;
    private javax.swing.JButton applyButton;
    private javax.swing.JMenuItem bugMenuItem;
    private javax.swing.JMenuItem closeAllMenuItem;
    private javax.swing.JButton editButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPanel hostClockPanel;
    private javax.swing.JPanel hostConnectionPanel;
    private javax.swing.JTabbedPane hostConnectionTabbedPane;
    private javax.swing.JTabbedPane hostHistTabbedPane;
    public static javax.swing.JTextArea hostLogInfoTextArea;
    private javax.swing.JMenuBar hostMenuBar;
    private javax.swing.JPanel hostMomPanel;
    private javax.swing.JPanel hostStatusPanel;
    private javax.swing.JScrollPane hostStatusScrollPane;
    private javax.swing.JCheckBox jCheckBoxDefaultAdr;
    private javax.swing.JCheckBox jCheckBoxManualAdr;
    private javax.swing.JCheckBox jCheckBoxMultihomedEnabled;
    private javax.swing.JCheckBox jCheckBoxSSLEnabled;
    private javax.swing.JComboBox jComboBoxLocalAdrs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator9;
    public static javax.swing.JTextArea jTextAreaHostStatus;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JTextField jTextFieldUsername;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JMenuItem manualMenuItem;
    private javax.swing.JMenuItem minTryMenuItem;
    public static javax.swing.JToggleButton runHostServerToggleButton;
    private javax.swing.JButton strAdmButton;
    private javax.swing.JMenu windowMenu;
    private javax.swing.JPanel workingGlasPanel;
    // End of variables declaration//GEN-END:variables
    

    public JPanel show_date_time = new JPanel();

    public JLabel date = new JLabel("Date");
    public JLabel time = new JLabel("Time");
    public JLabel show_time = new JLabel("Show Time");
    public JLabel Show_date = new JLabel("Show Date");
    public JLabel Show_date02 = new JLabel("Show Date");
    public JLabel Show_date03 = new JLabel("Show Date");

    DateFormat dateFormat2 = new SimpleDateFormat("h:mm:ss a");
    java.util.Date date2;



        public JPanel Show_Time_date(){


        DateFormat dateFormat = new SimpleDateFormat("EEE-dd MMM-yyyy");
        java.util.Date date = new java.util.Date();
        String dateTime = dateFormat.format(date);

        Show_date = new JLabel(dateTime);
        show_date_time.add(Show_date);

        show_time= new JLabel("");
        updateDateTime();
        show_date_time.add(show_time);


        show_date_time.setSize(110, 300);
        show_date_time.setOpaque(false);
        Show_date.setForeground(Color.red);
        show_time.setForeground(Color.red);


        show_date_time.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        show_date_time.setForeground(new java.awt.Color(204, 0, 0));

        return show_date_time;
    }



    public void updateDateTime()
    {
    Thread th = new Thread(new Runnable()
        {
        public void run()
            {
            while(true)
                {
                date2 = new java.util.Date();
                String dateTime = dateFormat2.format(date2);
                show_time.setText(dateTime);
                show_time.updateUI();
                }
            }
        });
    th.start();
    }



    public void showInfoOnHostTextArea(String data)
    {
        hostLogInfoTextArea.append(data);
        this.validate();
    }

        
}
